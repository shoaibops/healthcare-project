pipeline {
    agent any
    tools {
        maven 'M2_HOME'
    }
    environment {
        DOCKER_IMAGE = "shoaibpathan/healthcare:1.0"
    }
    stages {
        stage('Git Checkout') {
            steps {
                echo 'Cloning the Git repository'
                git branch: 'master', url: 'https://github.com/shoaibops/healthcare-project.git'
            }
        }
        stage('Maven Build') {
            steps {
                echo 'Building the project with Maven'
                sh 'mvn clean package'
            }
        }
        stage('Docker Image Creation') {
            steps {
                echo 'Building Docker image'
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }
        stage('Login to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerid', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to DockerHub'
                sh 'docker push $DOCKER_IMAGE'
            }
        }
        stage('Provision Kubernetes Cluster') {
            steps {
                echo 'Provisioning Kubernetes cluster on EC2 instances'
                ansiblePlaybook credentialsId: 'sshkey', playbook: 'ansible-playbook.yml'
            }
        }
        stage('Deploy to Kubernetes Test Cluster') {
            steps {
                echo 'Deploying application to Kubernetes test cluster'
                sh 'kubectl apply -f deployment.yml'
            }
        }
        stage('Test Deployment') {
            steps {
                echo 'Running automated tests on the deployed application'
                // Add your test automation tool command here
                sh './run_tests.sh'
            }
        }
        stage('Deploy to Production') {
            when {
                branch 'master'
            }
            steps {
                echo 'Deploying to production after successful tests'
                // Repeat the Kubernetes deployment step for prod cluster
                sh 'kubectl apply -f deployment-prod.yml'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
